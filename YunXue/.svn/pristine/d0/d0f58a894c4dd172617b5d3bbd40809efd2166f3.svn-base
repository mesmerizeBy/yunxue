package yunxue.action;

import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import yunxue.dao.ClassIntervalDaoImpl;
import yunxue.dao.PersonalinfoDao;
import yunxue.dao.PersonalinfoDaoImpl;
import yunxue.mo.ClassIntervalMo;
import yunxue.mo.TidentityMo;

/**
 * Servlet implementation class Tidentity
 */
@WebServlet("/Tidentity.do")
public class Tidentity extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Tidentity() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		ServletContext servletContext = getServletConfig().getServletContext();
		String realPath = servletContext.getRealPath("/");
		DiskFileItemFactory factory = new DiskFileItemFactory();
		factory.setRepository(new File(realPath));
		factory.setSizeThreshold(1024 * 1024 * 20);
		ServletFileUpload upload = new ServletFileUpload(factory);
		List items = null;
		String fosPath="";
		try {
			items = upload.parseRequest(request);
		} catch (FileUploadException e) {
			e.printStackTrace();
		}
		for (int i = 0; i < items.size(); i++) {
			FileItem item = (FileItem) items.get(i);
			if (!item.isFormField()){
				String fileName = item.getName();
				String fieldName = item.getFieldName();
				if(fieldName.equals("teacherImg")){
				    fosPath="/teacherIMG"+System.currentTimeMillis()
					        + fileName.substring(fileName.lastIndexOf("."),fileName.length());
				}
				else if(fileName.equals("teacherImg2")){
					fosPath="/teacherIdIMG"+System.currentTimeMillis()
			        + fileName.substring(fileName.lastIndexOf("."),fileName.length());
				}
				else{
					fosPath="/teacherIdIMG2"+System.currentTimeMillis()
			        + fileName.substring(fileName.lastIndexOf("."),fileName.length());
				}
				String fosName=realPath+"/"+fosPath;
				try{
				   File file=new File(fosName);
				   item.write(file);
				}catch(Exception e){
					e.printStackTrace();
				}
				
			}
			else{
				request.setCharacterEncoding("UTF-8");
				String teacherno=request.getParameter("teacherNo");
				int teacherNo=Integer.parseInt(teacherno);
				String tName=request.getParameter("tname");
				String year=request.getParameter("year");
				int tAge=2017-Integer.parseInt(year);
				String tSex=request.getParameter("sex");
				String tEducation=request.getParameter("tEducation");
				String tSchool=request.getParameter("tschool");
				String tMajor=request.getParameter("tmajor");
				String tArea=request.getParameter("tarea");
				String tDescription=request.getParameter("tDescription");
				String tExperience=request.getParameter("tExperience");
				
				try{
					PersonalinfoDao personal=new PersonalinfoDaoImpl();
					TidentityMo tt=new TidentityMo();
					tt.setTeacherNo(teacherNo);
					tt.settName(tName);
					tt.settAge(tAge);
					tt.settSex(tSex);
					tt.settEducation(tEducation);
					tt.settSchool(tSchool);
					tt.settMajor(tMajor);
					tt.settArea(tArea);
					tt.settDescription(tDescription);
					tt.settExperience(tExperience);
					boolean flag=personal.updateTeacher(tt);
					if(flag==true){
						request.setAttribute("flag", flag);
						request.setAttribute("teacherNo", teacherNo);
						
					}
					
				}catch(SQLException e){  	   
				       e.printStackTrace();
			       }
				
			}
		}
		
		
		List<ClassIntervalMo> interval =null;
		ClassIntervalDaoImpl intervalno=new ClassIntervalDaoImpl();
		try{
			interval=intervalno.classIntervalNo();
		}catch (Exception e) {
			e.printStackTrace();
		}
		request.setAttribute("interval", interval);
		request.getRequestDispatcher("/font/tIdentity.jsp").forward(request, response);
		
	}

}
